<%- include('partials/header', { title: 'Chi ti√™u' , additionalCSS: ['/css/dashboard.css'] }) %>
  <div class="app-container">
    <%- include('partials/sidebar', { currentPage: 'expenses' }) %>

    <!-- Main Content -->
    <main class="main-content">
      <header class="top-bar">
        <h1>Qu·∫£n l√Ω chi ti√™u</h1>
        <div class="user-info">
          <span id="user-name">User</span>
          <button class="btn-logout" onclick="logout()">ƒêƒÉng xu·∫•t</button>
        </div>
      </header>

      <div class="content">
        <!-- 6 Jars Summary -->
        <div class="card">
          <h2>Ph√¢n b·ªï 6 l·ªç (6 Jars Method)</h2>
          <div class="jars-grid">
            <div class="jar-card">
              <div class="jar-icon">üéÅ</div>
              <h4>G·ª≠i M·∫π</h4>
              <p class="jar-amount" id="jar-mother">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">üè†</div>
              <h4>NEC (55%)</h4>
              <p class="jar-subtitle">Nhu c·∫ßu thi·∫øt y·∫øu</p>
              <p class="jar-amount" id="jar-nec">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">üíé</div>
              <h4>FFA (10%)</h4>
              <p class="jar-subtitle">T·ª± do t√†i ch√≠nh</p>
              <p class="jar-amount" id="jar-ffa">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">üìö</div>
              <h4>EDUC (10%)</h4>
              <p class="jar-subtitle">Gi√°o d·ª•c ƒê√†o t·∫°o</p>
              <p class="jar-amount" id="jar-educ">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">üéâ</div>
              <h4>PLAY (10%)</h4>
              <p class="jar-subtitle">H∆∞·ªüng th·ª•</p>
              <p class="jar-amount" id="jar-play">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">‚ù§Ô∏è</div>
              <h4>GIVE (7%)</h4>
              <p class="jar-subtitle">Cho ƒëi</p>
              <p class="jar-amount" id="jar-give">0 VND</p>
            </div>
            <div class="jar-card">
              <div class="jar-icon">üè¶</div>
              <h4>LTS (10%)</h4>
              <p class="jar-subtitle">Ti·∫øt ki·ªám</p>
              <p class="jar-amount" id="jar-lts">0 VND</p>
            </div>
          </div>
        </div>

        <!-- Expenses List -->
        <div class="card">
          <h2>Danh s√°ch chi ti√™u</h2>

          <div id="expenses-list" class="table-container">
            <p class="loading">ƒêang t·∫£i d·ªØ li·ªáu...</p>
          </div>
        </div>
      </div>
    </main>
  </div>

  <script src="/js/auth.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      await loadExpenses();
    });

    const loadExpenses = async () => {
      const container = document.getElementById('expenses-list');
      container.innerHTML = '<p class="loading">ƒêang t·∫£i...</p>';

      try {
        const response = await apiCall('/expenses');

        if (response.success && response.data) {
          if (response.data.length === 0) {
            container.innerHTML = '<p class="loading">Ch∆∞a c√≥ d·ªØ li·ªáu. Vui l√≤ng import t·ª´ Excel.</p>';
            return;
          }

          // Calculate 6 jars totals
          let jars = {
            mother: 0, nec: 0, ffa: 0, educ: 0, play: 0, give: 0, lts: 0
          };

          response.data.forEach(expense => {
            if (expense.allocation) {
              jars.mother += expense.allocation.motherGift || 0;
              jars.nec += expense.allocation.nec || 0;
              jars.ffa += expense.allocation.ffa || 0;
              jars.educ += expense.allocation.educ || 0;
              jars.play += expense.allocation.play || 0;
              jars.give += expense.allocation.give || 0;
              jars.lts += expense.allocation.lts || 0;
            }
          });

          // Update jar displays
          document.getElementById('jar-mother').textContent = formatCurrency(jars.mother);
          document.getElementById('jar-nec').textContent = formatCurrency(jars.nec);
          document.getElementById('jar-ffa').textContent = formatCurrency(jars.ffa);
          document.getElementById('jar-educ').textContent = formatCurrency(jars.educ);
          document.getElementById('jar-play').textContent = formatCurrency(jars.play);
          document.getElementById('jar-give').textContent = formatCurrency(jars.give);
          document.getElementById('jar-lts').textContent = formatCurrency(jars.lts);

          // Display table
          container.innerHTML = `
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Th√°ng</th>
                                    <th>Danh m·ª•c</th>
                                    <th>Kho·∫£n chi</th>
                                    <th>S·ªë l∆∞·ª£ng</th>
                                    <th>ƒê∆°n gi√°</th>
                                    <th>Th√†nh ti·ªÅn</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${response.data.map(expense => `
                                    <tr>
                                        <td>${new Date(expense.month).toLocaleDateString('vi-VN', { month: '2-digit', year: 'numeric' })}</td>
                                        <td><strong>${expense.category}</strong></td>
                                        <td>${expense.itemName}</td>
                                        <td>${expense.quantity || 1}</td>
                                        <td>${formatCurrency(expense.unitPrice || 0)}</td>
                                        <td><strong>${formatCurrency(expense.totalAmount || 0)}</strong></td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    `;
        } else {
          container.innerHTML = '<p class="loading">Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu</p>';
        }
      } catch (error) {
        console.error('Failed to load expenses:', error);
        container.innerHTML = '<p class="loading">L·ªói: Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu. H√£y import d·ªØ li·ªáu t·ª´ Excel.</p>';
      }
    };

    const formatCurrency = (amount) => {
      return new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND'
      }).format(amount);
    };
  </script>

  <style>
    .jars-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 15px;
      margin: 20px 0;
    }

    .jar-card {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 20px;
      border-radius: 10px;
      text-align: center;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .jar-icon {
      font-size: 32px;
      margin-bottom: 10px;
    }

    .jar-card h4 {
      margin: 5px 0;
      font-size: 16px;
    }

    .jar-subtitle {
      font-size: 11px;
      opacity: 0.9;
      margin: 5px 0;
    }

    .jar-amount {
      font-size: 18px;
      font-weight: bold;
      margin: 10px 0 0 0;
    }

    .table-container {
      overflow-x: auto;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
    }

    .data-table th,
    .data-table td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #e0e0e0;
    }

    .data-table th {
      background: #f5f7fa;
      font-weight: 600;
      color: #2c3e50;
    }

    .data-table tbody tr:hover {
      background: #f8f9fa;
    }
  </style>
  <%- include('partials/footer', { additionalJS: ['/js/auth.js', '/js/expenses.js' ] }) %>
